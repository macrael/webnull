Webnull

x make it append the shibboleth on first run
x make it blackhole the website
x make it not blackhole an already managed website
x make it unblackhole a site
x make it re-blackhole a site
x refactor the two methods, too much shared
x make it unblackhole a site for (5) minutes.
x make it catch ctl-c
x switch to the local dummy hosts when you pass an enviornment variable
x make it unblackhole all
x switch to command based UI
x update readme
x Add tests
x refactor, way too much shared code again.
    x add modify_body to ManagedHostfile
    x Managed hostfile should read on init and then store the head.
    x get printfunc from future
x list the patterns that actually matched
x better text for -a
x test denying a permaallowed site.
x test initial setup, an unmanaged hostfile.
x pretty time output
* make it unblackhole until tomorrow
* update README
* ---- release 1.0 ----

BACKLOG
* should we error if you do "deny foobar"?
* refactor again
    * should pass the hostfile path into ManagedHostfile()
    * maybe more stuff can be put on as methods for ManagedHostfile()
* make sure that .'s in the search name aren't being used as . in the re
    * or do I want to go whole hog and let the sitename be a pattern? I'm injecting it into one...
* don't add www if there's already a subdomain
    * for subdomains, just put the subdomain, for hostnames put it and www
* could add short command names "d" and "a"
* dont' crash on invalid hostnames, reject them properly.
* add a "remove webnull" that removes the shibboleth and everything below

* maybe -a is actually just leaving the name field blank? not a flag
* make it a proper package
    * virtualenv
    * pip file
    * requirements.txt
    * setup.py?
* make a man page
* write a dotfile so that when moving to a new machine I can bring it all along
    * ugh this probably makes concurrancy way more real.
    * might be nice because we can just rewrite the whole file every time instead of doing parts?
* don't do two reads everytime
    * maybe store the read in local variables.
* switch from localhost addresses to invalid addresses.
* make not using sudo print a nicer error
* Could use a different method than fsevents
    * Maybe have webnull emit a signal every time it writes? Have Popen catch it?
        * That's not a thing, I dont' think.
    * Maybe just print our writes into stdout, then we don't have to wait?
        * probably with a shibboleth to parse out the writes.
        * thinks like dates will not work with the saver
* How do I test the delay?
    * print out what time it is when done, that way we can see if it matched the estimate.

BUGS
* sometimes, it takes a minute for the website (twitter) to go away, do I need to kill some daemon or reset some cache or something?
    * Seems Safari related. pinging it or trying to open it in Chrome fails.
x webnull www.reddit.com doesn't strip the www. off
x If you -e a pattern that matches nothing, print an error and don't time


x manual testing of -t30 was dead on balls accurate.

UI
---
Command based.

rn: deny/allow

webnull deny example.com
webnull d example.com ??

webnull allow [-tamf] example.com
webnull a example.com ??

webnull remove example.com

deny/permit
disallow/allow
blackhole/unblackhole
disconnect/connect/reconnect

usage: sudo webnull deny facebook.com
usage: sudo webnull allow facebook
usage: sudo webnull allow -a
usage: sudo webnull allow -t 30 facebook
usage: sudo webnull allow -f (f == forever, remove the listing from the managed set.)
    * should -f just permanetly comment it out or remove it from the list?
        * if commented out, we should have another command that removes it from the list...

default is 5 minutes
-t in minutes
--tomorrow -m ? -- enable until tomorrow
-am == all until tomorrow

* we should only have 1 waiting at a time, so we write when we do this.
* file locking? possible?

* how do I solve having two different sites enabled in two different terminals?
